// ------------------------------------------------------------------------------
//  Copyright (c) 2016 Microsoft Corporation
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.Text;

    /// <summary>
    /// The type DriveItemSearchRequestBuilder.
    /// </summary>
    public partial class DriveItemSearchRequestBuilder : BaseRequestBuilder, IDriveItemSearchRequestBuilder
    {
    
        public DriveItemSearchRequestBuilder(
            string requestUrl,
            IBaseClient client,
            string q = null)
            : base(requestUrl, client)
        {
            
            this.Q = q;

        }
    
        /// <summary>
        /// Gets the value of Q.
        /// </summary>
        public string Q { get; set; }
    
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public IDriveItemSearchRequest Request(IList<Option> options = null)
        {
        
            var functionRequestUrl = this.RequestUrl;
            
            var functionParametersStringBuilder = new StringBuilder();

            if (this.Q != null)
            {
                functionParametersStringBuilder.AppendFormat("q='{0}',", this.Q);
            }

            if (functionParametersStringBuilder.Length > 0)
            {
                functionParametersStringBuilder.Remove(functionParametersStringBuilder.Length - 1, 1);
                functionRequestUrl = string.Format("{0}({1})", this.RequestUrl, functionParametersStringBuilder.ToString());
            }
            
            return new DriveItemSearchRequest(
                functionRequestUrl,
                this.Client,
                options);
        
        }

    }
}

