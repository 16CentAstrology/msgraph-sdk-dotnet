// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The type DriveItemDeltaRequestBuilder.
    /// </summary>
    public partial class UserSendMailRequestBuilder : BasePostMethodRequestBuilder<IUserSendMailRequest>, IUserSendMailRequestBuilder
    {
        /// <summary>
        /// Constructs a new <see cref="UserSendMailRequestBuilder"/>.
        /// </summary>
        /// <param name="requestUrl">The URL for the request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        /// <param name="message">A message parameter for the OData method call.</param>
        /// <param name="saveToSentItems">A saveToSentItems parameter for the OData method call.</param>
        public UserSendMailRequestBuilder(
            string requestUrl,
            IBaseClient client,
            Message message,
            bool? saveToSentItems)
            : base(requestUrl, client)
        {
            SetParameter("message", message, false);
            SetParameter("saveToSentItems", saveToSentItems, true);
        }

        /// <summary>
        /// A method used by the base class to construct a request class instance.
        /// </summary>
        /// <param name="functionUrl">The request URL to </param>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>An instance of a specific request class.</returns>
        protected override IUserSendMailRequest CreateRequest(string functionUrl, IEnumerable<Option> options)
        {
            var request = new UserSendMailRequest(functionUrl, this.Client, options);

            if (HasParameter("message"))
                request.RequestBody.Message = GetParameter<Message>("message");

            if (HasParameter("saveToSentItems"))
                request.RequestBody.SaveToSentItems = GetParameter<bool?>("saveToSentItems");

            return request;
        }
    }
}
