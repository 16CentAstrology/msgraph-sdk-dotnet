// ------------------------------------------------------------------------------
//  Copyright (c) 2016 Microsoft Corporation
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The interface IMessageRequestBuilder.
    /// </summary>
    public partial interface IMessageRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        IMessageRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        IMessageRequest Request(IList<Option> options);
        
        /// <summary>
        /// Gets the request builder for Attachments.
        /// </summary>
        /// <returns>The <see cref="IAttachmentsCollectionRequestBuilder"/>.</returns>
        IAttachmentsCollectionRequestBuilder Attachments { get; }
        
        /// <summary>
        /// Gets the request builder for MessageCopy.
        /// </summary>
        /// <returns>The <see cref="IMessageCopyRequestBuilder"/>.</returns>
        IMessageCopyRequestBuilder Copy(
            string destinationId = null);

        /// <summary>
        /// Gets the request builder for MessageMove.
        /// </summary>
        /// <returns>The <see cref="IMessageMoveRequestBuilder"/>.</returns>
        IMessageMoveRequestBuilder Move(
            string destinationId = null);

        /// <summary>
        /// Gets the request builder for MessageCreateReply.
        /// </summary>
        /// <returns>The <see cref="IMessageCreateReplyRequestBuilder"/>.</returns>
        IMessageCreateReplyRequestBuilder CreateReply();

        /// <summary>
        /// Gets the request builder for MessageCreateReplyAll.
        /// </summary>
        /// <returns>The <see cref="IMessageCreateReplyAllRequestBuilder"/>.</returns>
        IMessageCreateReplyAllRequestBuilder CreateReplyAll();

        /// <summary>
        /// Gets the request builder for MessageCreateForward.
        /// </summary>
        /// <returns>The <see cref="IMessageCreateForwardRequestBuilder"/>.</returns>
        IMessageCreateForwardRequestBuilder CreateForward();

        /// <summary>
        /// Gets the request builder for MessageReply.
        /// </summary>
        /// <returns>The <see cref="IMessageReplyRequestBuilder"/>.</returns>
        IMessageReplyRequestBuilder Reply(
            string comment = null);

        /// <summary>
        /// Gets the request builder for MessageReplyAll.
        /// </summary>
        /// <returns>The <see cref="IMessageReplyAllRequestBuilder"/>.</returns>
        IMessageReplyAllRequestBuilder ReplyAll(
            string comment = null);

        /// <summary>
        /// Gets the request builder for MessageForward.
        /// </summary>
        /// <returns>The <see cref="IMessageForwardRequestBuilder"/>.</returns>
        IMessageForwardRequestBuilder Forward(
            string comment = null,
            Recipient toRecipients = null);

        /// <summary>
        /// Gets the request builder for MessageSend.
        /// </summary>
        /// <returns>The <see cref="IMessageSendRequestBuilder"/>.</returns>
        IMessageSendRequestBuilder Send();
    
    }
}
