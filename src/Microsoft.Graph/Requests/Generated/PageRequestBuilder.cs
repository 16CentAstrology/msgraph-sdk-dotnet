// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type PageRequestBuilder.
    /// </summary>
    public partial class PageRequestBuilder : EntityRequestBuilder, IPageRequestBuilder
    {

        /// <summary>
        /// Constructs a new PageRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public PageRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IPageRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IPageRequest Request(IEnumerable<Option> options)
        {
            return new PageRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for ParentSection.
        /// </summary>
        /// <returns>The <see cref="ISectionRequestBuilder"/>.</returns>
        public ISectionRequestBuilder ParentSection
        {
            get
            {
                return new SectionRequestBuilder(this.AppendSegmentToRequestUrl("parentSection"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ParentNotebook.
        /// </summary>
        /// <returns>The <see cref="INotebookRequestBuilder"/>.</returns>
        public INotebookRequestBuilder ParentNotebook
        {
            get
            {
                return new NotebookRequestBuilder(this.AppendSegmentToRequestUrl("parentNotebook"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for Content.
        /// </summary>
        /// <returns>The <see cref="IPageContentRequestBuilder"/>.</returns>
        public IPageContentRequestBuilder Content
        {
            get
            {
                return new PageContentRequestBuilder(this.AppendSegmentToRequestUrl("$value"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for PagePatchContent.
        /// </summary>
        /// <returns>The <see cref="IPagePatchContentRequestBuilder"/>.</returns>
        public IPagePatchContentRequestBuilder PatchContent(
            IEnumerable<PatchContentCommand> commands = null)
        {
            return new PagePatchContentRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.PatchContent"),
                this.Client,
                commands);
        }

        /// <summary>
        /// Gets the request builder for PageCopyToSection.
        /// </summary>
        /// <returns>The <see cref="IPageCopyToSectionRequestBuilder"/>.</returns>
        public IPageCopyToSectionRequestBuilder CopyToSection(
            string id = null,
            string groupId = null)
        {
            return new PageCopyToSectionRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.CopyToSection"),
                this.Client,
                id,
                groupId);
        }
    
    }
}
