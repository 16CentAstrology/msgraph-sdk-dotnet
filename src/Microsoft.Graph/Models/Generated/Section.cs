// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Section.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class Section : Entity
    {
    
        /// <summary>
        /// Gets or sets is default.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isDefault", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsDefault { get; set; }
    
        /// <summary>
        /// Gets or sets pages url.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "pagesUrl", Required = Newtonsoft.Json.Required.Default)]
        public string PagesUrl { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "name", Required = Newtonsoft.Json.Required.Default)]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets created by.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "createdBy", Required = Newtonsoft.Json.Required.Default)]
        public string CreatedBy { get; set; }
    
        /// <summary>
        /// Gets or sets created by identity.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "createdByIdentity", Required = Newtonsoft.Json.Required.Default)]
        public OneNoteIdentitySet CreatedByIdentity { get; set; }
    
        /// <summary>
        /// Gets or sets last modified by.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastModifiedBy", Required = Newtonsoft.Json.Required.Default)]
        public string LastModifiedBy { get; set; }
    
        /// <summary>
        /// Gets or sets last modified by identity.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastModifiedByIdentity", Required = Newtonsoft.Json.Required.Default)]
        public OneNoteIdentitySet LastModifiedByIdentity { get; set; }
    
        /// <summary>
        /// Gets or sets last modified time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastModifiedTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastModifiedTime { get; set; }
    
        /// <summary>
        /// Gets or sets self.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "self", Required = Newtonsoft.Json.Required.Default)]
        public string Self { get; set; }
    
        /// <summary>
        /// Gets or sets created time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "createdTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? CreatedTime { get; set; }
    
        /// <summary>
        /// Gets or sets parent notebook.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "parentNotebook", Required = Newtonsoft.Json.Required.Default)]
        public Notebook ParentNotebook { get; set; }
    
        /// <summary>
        /// Gets or sets parent section group.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "parentSectionGroup", Required = Newtonsoft.Json.Required.Default)]
        public SectionGroup ParentSectionGroup { get; set; }
    
        /// <summary>
        /// Gets or sets pages.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "pages", Required = Newtonsoft.Json.Required.Default)]
        public ISectionPagesCollectionPage Pages { get; set; }
    
    }
}

