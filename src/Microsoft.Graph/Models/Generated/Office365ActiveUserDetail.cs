// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Office365ActiveUserDetail.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class Office365ActiveUserDetail
    {
    
        /// <summary>
        /// Gets or sets reportRefreshDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reportRefreshDate", Required = Newtonsoft.Json.Required.Default)]
        public Date ReportRefreshDate { get; set; }
    
        /// <summary>
        /// Gets or sets userPrincipalName.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userPrincipalName", Required = Newtonsoft.Json.Required.Default)]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets displayName.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets isDeleted.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isDeleted", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsDeleted { get; set; }
    
        /// <summary>
        /// Gets or sets deletedDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deletedDate", Required = Newtonsoft.Json.Required.Default)]
        public Date DeletedDate { get; set; }
    
        /// <summary>
        /// Gets or sets hasExchangeLicense.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hasExchangeLicense", Required = Newtonsoft.Json.Required.Default)]
        public bool? HasExchangeLicense { get; set; }
    
        /// <summary>
        /// Gets or sets hasOneDriveLicense.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hasOneDriveLicense", Required = Newtonsoft.Json.Required.Default)]
        public bool? HasOneDriveLicense { get; set; }
    
        /// <summary>
        /// Gets or sets hasSharePointLicense.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hasSharePointLicense", Required = Newtonsoft.Json.Required.Default)]
        public bool? HasSharePointLicense { get; set; }
    
        /// <summary>
        /// Gets or sets hasSkypeForBusinessLicense.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hasSkypeForBusinessLicense", Required = Newtonsoft.Json.Required.Default)]
        public bool? HasSkypeForBusinessLicense { get; set; }
    
        /// <summary>
        /// Gets or sets hasYammerLicense.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hasYammerLicense", Required = Newtonsoft.Json.Required.Default)]
        public bool? HasYammerLicense { get; set; }
    
        /// <summary>
        /// Gets or sets exchangeLastActivityDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "exchangeLastActivityDate", Required = Newtonsoft.Json.Required.Default)]
        public Date ExchangeLastActivityDate { get; set; }
    
        /// <summary>
        /// Gets or sets oneDriveLastActivityDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "oneDriveLastActivityDate", Required = Newtonsoft.Json.Required.Default)]
        public Date OneDriveLastActivityDate { get; set; }
    
        /// <summary>
        /// Gets or sets sharePointLastActivityDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharePointLastActivityDate", Required = Newtonsoft.Json.Required.Default)]
        public Date SharePointLastActivityDate { get; set; }
    
        /// <summary>
        /// Gets or sets skypeForBusinessLastActivityDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "skypeForBusinessLastActivityDate", Required = Newtonsoft.Json.Required.Default)]
        public Date SkypeForBusinessLastActivityDate { get; set; }
    
        /// <summary>
        /// Gets or sets yammerLastActivityDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "yammerLastActivityDate", Required = Newtonsoft.Json.Required.Default)]
        public Date YammerLastActivityDate { get; set; }
    
        /// <summary>
        /// Gets or sets exchangeLicenseAssignDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "exchangeLicenseAssignDate", Required = Newtonsoft.Json.Required.Default)]
        public Date ExchangeLicenseAssignDate { get; set; }
    
        /// <summary>
        /// Gets or sets oneDriveLicenseAssignDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "oneDriveLicenseAssignDate", Required = Newtonsoft.Json.Required.Default)]
        public Date OneDriveLicenseAssignDate { get; set; }
    
        /// <summary>
        /// Gets or sets sharePointLicenseAssignDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharePointLicenseAssignDate", Required = Newtonsoft.Json.Required.Default)]
        public Date SharePointLicenseAssignDate { get; set; }
    
        /// <summary>
        /// Gets or sets skypeForBusinessLicenseAssignDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "skypeForBusinessLicenseAssignDate", Required = Newtonsoft.Json.Required.Default)]
        public Date SkypeForBusinessLicenseAssignDate { get; set; }
    
        /// <summary>
        /// Gets or sets yammerLicenseAssignDate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "yammerLicenseAssignDate", Required = Newtonsoft.Json.Required.Default)]
        public Date YammerLicenseAssignDate { get; set; }
    
        /// <summary>
        /// Gets or sets assignedProducts.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "assignedProducts", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> AssignedProducts { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }
    
    }
}
