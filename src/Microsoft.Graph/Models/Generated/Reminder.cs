// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Reminder.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class Reminder
    {
    
        /// <summary>
        /// Gets or sets eventId.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "eventId", Required = Newtonsoft.Json.Required.Default)]
        public string EventId { get; set; }
    
        /// <summary>
        /// Gets or sets eventStartTime.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "eventStartTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeTimeZone EventStartTime { get; set; }
    
        /// <summary>
        /// Gets or sets eventEndTime.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "eventEndTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeTimeZone EventEndTime { get; set; }
    
        /// <summary>
        /// Gets or sets changeKey.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "changeKey", Required = Newtonsoft.Json.Required.Default)]
        public string ChangeKey { get; set; }
    
        /// <summary>
        /// Gets or sets eventSubject.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "eventSubject", Required = Newtonsoft.Json.Required.Default)]
        public string EventSubject { get; set; }
    
        /// <summary>
        /// Gets or sets eventLocation.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "eventLocation", Required = Newtonsoft.Json.Required.Default)]
        public Location EventLocation { get; set; }
    
        /// <summary>
        /// Gets or sets eventWebLink.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "eventWebLink", Required = Newtonsoft.Json.Required.Default)]
        public string EventWebLink { get; set; }
    
        /// <summary>
        /// Gets or sets reminderFireTime.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reminderFireTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeTimeZone ReminderFireTime { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }
    
    }
}
