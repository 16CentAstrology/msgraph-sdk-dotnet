// ------------------------------------------------------------------------------
//  Copyright (c) 2016 Microsoft Corporation
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Post.
    /// </summary>
    [DataContract]
    public partial class Post : OutlookItem
    {
    
        /// <summary>
        /// Gets or sets body.
        /// </summary>
        [DataMember(Name = "body", EmitDefaultValue = false, IsRequired = false)]
        public ItemBody Body { get; set; }
    
        /// <summary>
        /// Gets or sets received date time.
        /// </summary>
        [DataMember(Name = "receivedDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? ReceivedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets has attachments.
        /// </summary>
        [DataMember(Name = "hasAttachments", EmitDefaultValue = false, IsRequired = false)]
        public bool? HasAttachments { get; set; }
    
        /// <summary>
        /// Gets or sets from.
        /// </summary>
        [DataMember(Name = "from", EmitDefaultValue = false, IsRequired = false)]
        public Recipient From { get; set; }
    
        /// <summary>
        /// Gets or sets sender.
        /// </summary>
        [DataMember(Name = "sender", EmitDefaultValue = false, IsRequired = false)]
        public Recipient Sender { get; set; }
    
        /// <summary>
        /// Gets or sets conversation thread id.
        /// </summary>
        [DataMember(Name = "conversationThreadId", EmitDefaultValue = false, IsRequired = false)]
        public string ConversationThreadId { get; set; }
    
        /// <summary>
        /// Gets or sets new participants.
        /// </summary>
        [DataMember(Name = "newParticipants", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<Recipient> NewParticipants { get; set; }
    
        /// <summary>
        /// Gets or sets conversation id.
        /// </summary>
        [DataMember(Name = "conversationId", EmitDefaultValue = false, IsRequired = false)]
        public string ConversationId { get; set; }
    
        /// <summary>
        /// Gets or sets in reply to.
        /// </summary>
        [DataMember(Name = "inReplyTo", EmitDefaultValue = false, IsRequired = false)]
        public Post InReplyTo { get; set; }
    
        /// <summary>
        /// Gets or sets attachments.
        /// </summary>
        [DataMember(Name = "attachments", EmitDefaultValue = false, IsRequired = false)]
        [JsonConverter(typeof(InterfaceConverter<AttachmentsCollectionPage>))]
        public IAttachmentsCollectionPage Attachments { get; set; }
    
    }
}

