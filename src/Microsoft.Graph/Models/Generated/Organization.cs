// ------------------------------------------------------------------------------
//  Copyright (c) 2016 Microsoft Corporation
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Organization.
    /// </summary>
    [DataContract]
    public partial class Organization : DirectoryObject
    {
    
        /// <summary>
        /// Gets or sets assigned plans.
        /// </summary>
        [DataMember(Name = "assignedPlans", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<AssignedPlan> AssignedPlans { get; set; }
    
        /// <summary>
        /// Gets or sets business phones.
        /// </summary>
        [DataMember(Name = "businessPhones", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> BusinessPhones { get; set; }
    
        /// <summary>
        /// Gets or sets city.
        /// </summary>
        [DataMember(Name = "city", EmitDefaultValue = false, IsRequired = false)]
        public string City { get; set; }
    
        /// <summary>
        /// Gets or sets country.
        /// </summary>
        [DataMember(Name = "country", EmitDefaultValue = false, IsRequired = false)]
        public string Country { get; set; }
    
        /// <summary>
        /// Gets or sets country letter code.
        /// </summary>
        [DataMember(Name = "countryLetterCode", EmitDefaultValue = false, IsRequired = false)]
        public string CountryLetterCode { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// </summary>
        [DataMember(Name = "displayName", EmitDefaultValue = false, IsRequired = false)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets marketing notification emails.
        /// </summary>
        [DataMember(Name = "marketingNotificationEmails", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> MarketingNotificationEmails { get; set; }
    
        /// <summary>
        /// Gets or sets on premises last sync date time.
        /// </summary>
        [DataMember(Name = "onPremisesLastSyncDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? OnPremisesLastSyncDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets on premises sync enabled.
        /// </summary>
        [DataMember(Name = "onPremisesSyncEnabled", EmitDefaultValue = false, IsRequired = false)]
        public bool? OnPremisesSyncEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets postal code.
        /// </summary>
        [DataMember(Name = "postalCode", EmitDefaultValue = false, IsRequired = false)]
        public string PostalCode { get; set; }
    
        /// <summary>
        /// Gets or sets preferred language.
        /// </summary>
        [DataMember(Name = "preferredLanguage", EmitDefaultValue = false, IsRequired = false)]
        public string PreferredLanguage { get; set; }
    
        /// <summary>
        /// Gets or sets provisioned plans.
        /// </summary>
        [DataMember(Name = "provisionedPlans", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<ProvisionedPlan> ProvisionedPlans { get; set; }
    
        /// <summary>
        /// Gets or sets security compliance notification mails.
        /// </summary>
        [DataMember(Name = "securityComplianceNotificationMails", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> SecurityComplianceNotificationMails { get; set; }
    
        /// <summary>
        /// Gets or sets security compliance notification phones.
        /// </summary>
        [DataMember(Name = "securityComplianceNotificationPhones", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> SecurityComplianceNotificationPhones { get; set; }
    
        /// <summary>
        /// Gets or sets state.
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = false, IsRequired = false)]
        public string State { get; set; }
    
        /// <summary>
        /// Gets or sets street.
        /// </summary>
        [DataMember(Name = "street", EmitDefaultValue = false, IsRequired = false)]
        public string Street { get; set; }
    
        /// <summary>
        /// Gets or sets technical notification mails.
        /// </summary>
        [DataMember(Name = "technicalNotificationMails", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<string> TechnicalNotificationMails { get; set; }
    
        /// <summary>
        /// Gets or sets verified domains.
        /// </summary>
        [DataMember(Name = "verifiedDomains", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<VerifiedDomain> VerifiedDomains { get; set; }
    
    }
}

