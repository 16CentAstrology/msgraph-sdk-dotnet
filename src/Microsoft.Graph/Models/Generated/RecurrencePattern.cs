// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type RecurrencePattern.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class RecurrencePattern
    {
    
        /// <summary>
        /// Gets or sets type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "type", Required = Required.Default)]
        public RecurrencePatternType? Type { get; set; }
    
        /// <summary>
        /// Gets or sets interval.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "interval", Required = Required.Default)]
        public Int32? Interval { get; set; }
    
        /// <summary>
        /// Gets or sets month.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "month", Required = Required.Default)]
        public Int32? Month { get; set; }
    
        /// <summary>
        /// Gets or sets dayOfMonth.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "dayOfMonth", Required = Required.Default)]
        public Int32? DayOfMonth { get; set; }
    
        /// <summary>
        /// Gets or sets daysOfWeek.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "daysOfWeek", Required = Required.Default)]
        public IEnumerable<DayOfWeek> DaysOfWeek { get; set; }
    
        /// <summary>
        /// Gets or sets firstDayOfWeek.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "firstDayOfWeek", Required = Required.Default)]
        public DayOfWeek? FirstDayOfWeek { get; set; }
    
        /// <summary>
        /// Gets or sets index.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "index", Required = Required.Default)]
        public WeekIndex? Index { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }
    
    }
}
