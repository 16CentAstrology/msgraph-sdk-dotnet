// ------------------------------------------------------------------------------
//  Copyright (c) 2016 Microsoft Corporation
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Event.
    /// </summary>
    [DataContract]
    public partial class Event : OutlookItem
    {
    
        /// <summary>
        /// Gets or sets original start time zone.
        /// </summary>
        [DataMember(Name = "originalStartTimeZone", EmitDefaultValue = false, IsRequired = false)]
        public string OriginalStartTimeZone { get; set; }
    
        /// <summary>
        /// Gets or sets original end time zone.
        /// </summary>
        [DataMember(Name = "originalEndTimeZone", EmitDefaultValue = false, IsRequired = false)]
        public string OriginalEndTimeZone { get; set; }
    
        /// <summary>
        /// Gets or sets response status.
        /// </summary>
        [DataMember(Name = "responseStatus", EmitDefaultValue = false, IsRequired = false)]
        public ResponseStatus ResponseStatus { get; set; }
    
        /// <summary>
        /// Gets or sets i cal uid.
        /// </summary>
        [DataMember(Name = "iCalUId", EmitDefaultValue = false, IsRequired = false)]
        public string ICalUId { get; set; }
    
        /// <summary>
        /// Gets or sets reminder minutes before start.
        /// </summary>
        [DataMember(Name = "reminderMinutesBeforeStart", EmitDefaultValue = false, IsRequired = false)]
        public Int32? ReminderMinutesBeforeStart { get; set; }
    
        /// <summary>
        /// Gets or sets is reminder on.
        /// </summary>
        [DataMember(Name = "isReminderOn", EmitDefaultValue = false, IsRequired = false)]
        public bool? IsReminderOn { get; set; }
    
        /// <summary>
        /// Gets or sets has attachments.
        /// </summary>
        [DataMember(Name = "hasAttachments", EmitDefaultValue = false, IsRequired = false)]
        public bool? HasAttachments { get; set; }
    
        /// <summary>
        /// Gets or sets subject.
        /// </summary>
        [DataMember(Name = "subject", EmitDefaultValue = false, IsRequired = false)]
        public string Subject { get; set; }
    
        /// <summary>
        /// Gets or sets body.
        /// </summary>
        [DataMember(Name = "body", EmitDefaultValue = false, IsRequired = false)]
        public ItemBody Body { get; set; }
    
        /// <summary>
        /// Gets or sets body preview.
        /// </summary>
        [DataMember(Name = "bodyPreview", EmitDefaultValue = false, IsRequired = false)]
        public string BodyPreview { get; set; }
    
        /// <summary>
        /// Gets or sets importance.
        /// </summary>
        [DataMember(Name = "importance", EmitDefaultValue = false, IsRequired = false)]
        public Importance? Importance { get; set; }
    
        /// <summary>
        /// Gets or sets sensitivity.
        /// </summary>
        [DataMember(Name = "sensitivity", EmitDefaultValue = false, IsRequired = false)]
        public Sensitivity? Sensitivity { get; set; }
    
        /// <summary>
        /// Gets or sets start.
        /// </summary>
        [DataMember(Name = "start", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeTimeZone Start { get; set; }
    
        /// <summary>
        /// Gets or sets original start.
        /// </summary>
        [DataMember(Name = "originalStart", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? OriginalStart { get; set; }
    
        /// <summary>
        /// Gets or sets end.
        /// </summary>
        [DataMember(Name = "end", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeTimeZone End { get; set; }
    
        /// <summary>
        /// Gets or sets location.
        /// </summary>
        [DataMember(Name = "location", EmitDefaultValue = false, IsRequired = false)]
        public Location Location { get; set; }
    
        /// <summary>
        /// Gets or sets is all day.
        /// </summary>
        [DataMember(Name = "isAllDay", EmitDefaultValue = false, IsRequired = false)]
        public bool? IsAllDay { get; set; }
    
        /// <summary>
        /// Gets or sets is cancelled.
        /// </summary>
        [DataMember(Name = "isCancelled", EmitDefaultValue = false, IsRequired = false)]
        public bool? IsCancelled { get; set; }
    
        /// <summary>
        /// Gets or sets is organizer.
        /// </summary>
        [DataMember(Name = "isOrganizer", EmitDefaultValue = false, IsRequired = false)]
        public bool? IsOrganizer { get; set; }
    
        /// <summary>
        /// Gets or sets recurrence.
        /// </summary>
        [DataMember(Name = "recurrence", EmitDefaultValue = false, IsRequired = false)]
        public PatternedRecurrence Recurrence { get; set; }
    
        /// <summary>
        /// Gets or sets response requested.
        /// </summary>
        [DataMember(Name = "responseRequested", EmitDefaultValue = false, IsRequired = false)]
        public bool? ResponseRequested { get; set; }
    
        /// <summary>
        /// Gets or sets series master id.
        /// </summary>
        [DataMember(Name = "seriesMasterId", EmitDefaultValue = false, IsRequired = false)]
        public string SeriesMasterId { get; set; }
    
        /// <summary>
        /// Gets or sets show as.
        /// </summary>
        [DataMember(Name = "showAs", EmitDefaultValue = false, IsRequired = false)]
        public FreeBusyStatus? ShowAs { get; set; }
    
        /// <summary>
        /// Gets or sets type.
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false, IsRequired = false)]
        public EventType? Type { get; set; }
    
        /// <summary>
        /// Gets or sets attendees.
        /// </summary>
        [DataMember(Name = "attendees", EmitDefaultValue = false, IsRequired = false)]
        public IEnumerable<Attendee> Attendees { get; set; }
    
        /// <summary>
        /// Gets or sets organizer.
        /// </summary>
        [DataMember(Name = "organizer", EmitDefaultValue = false, IsRequired = false)]
        public Recipient Organizer { get; set; }
    
        /// <summary>
        /// Gets or sets web link.
        /// </summary>
        [DataMember(Name = "webLink", EmitDefaultValue = false, IsRequired = false)]
        public string WebLink { get; set; }
    
        /// <summary>
        /// Gets or sets calendar.
        /// </summary>
        [DataMember(Name = "calendar", EmitDefaultValue = false, IsRequired = false)]
        public Calendar Calendar { get; set; }
    
        /// <summary>
        /// Gets or sets instances.
        /// </summary>
        [DataMember(Name = "instances", EmitDefaultValue = false, IsRequired = false)]
        [JsonConverter(typeof(InterfaceConverter<InstancesCollectionPage>))]
        public IInstancesCollectionPage Instances { get; set; }
    
        /// <summary>
        /// Gets or sets attachments.
        /// </summary>
        [DataMember(Name = "attachments", EmitDefaultValue = false, IsRequired = false)]
        [JsonConverter(typeof(InterfaceConverter<AttachmentsCollectionPage>))]
        public IAttachmentsCollectionPage Attachments { get; set; }
    
    }
}

