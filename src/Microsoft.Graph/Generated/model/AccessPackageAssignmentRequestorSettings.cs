// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AccessPackageAssignmentRequestorSettings.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AccessPackageAssignmentRequestorSettings>))]
    public partial class AccessPackageAssignmentRequestorSettings
    {

        /// <summary>
        /// Gets or sets allowCustomAssignmentSchedule.
        /// If false, the requestor is not permitted to include a schedule in their request.
        /// </summary>
        [JsonPropertyName("allowCustomAssignmentSchedule")]
        public bool? AllowCustomAssignmentSchedule { get; set; }
    
        /// <summary>
        /// Gets or sets enableOnBehalfRequestorsToAddAccess.
        /// If true, allows on-behalf-of requestors to create a request to add access for another principal.
        /// </summary>
        [JsonPropertyName("enableOnBehalfRequestorsToAddAccess")]
        public bool? EnableOnBehalfRequestorsToAddAccess { get; set; }
    
        /// <summary>
        /// Gets or sets enableOnBehalfRequestorsToRemoveAccess.
        /// If true, allows on-behalf-of requestors to create a request to remove access for another principal.
        /// </summary>
        [JsonPropertyName("enableOnBehalfRequestorsToRemoveAccess")]
        public bool? EnableOnBehalfRequestorsToRemoveAccess { get; set; }
    
        /// <summary>
        /// Gets or sets enableOnBehalfRequestorsToUpdateAccess.
        /// If true, allows on-behalf-of requestors to create a request to update access for another principal.
        /// </summary>
        [JsonPropertyName("enableOnBehalfRequestorsToUpdateAccess")]
        public bool? EnableOnBehalfRequestorsToUpdateAccess { get; set; }
    
        /// <summary>
        /// Gets or sets enableTargetsToSelfAddAccess.
        /// If true, allows requestors to create a request to add access for themselves.
        /// </summary>
        [JsonPropertyName("enableTargetsToSelfAddAccess")]
        public bool? EnableTargetsToSelfAddAccess { get; set; }
    
        /// <summary>
        /// Gets or sets enableTargetsToSelfRemoveAccess.
        /// If true, allows requestors to create a request to remove their access.
        /// </summary>
        [JsonPropertyName("enableTargetsToSelfRemoveAccess")]
        public bool? EnableTargetsToSelfRemoveAccess { get; set; }
    
        /// <summary>
        /// Gets or sets enableTargetsToSelfUpdateAccess.
        /// If true, allows requestors to create a request to update their access.
        /// </summary>
        [JsonPropertyName("enableTargetsToSelfUpdateAccess")]
        public bool? EnableTargetsToSelfUpdateAccess { get; set; }
    
        /// <summary>
        /// Gets or sets onBehalfRequestors.
        /// The principals who can request on-behalf-of others.
        /// </summary>
        [JsonPropertyName("onBehalfRequestors")]
        public IEnumerable<SubjectSet> OnBehalfRequestors { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
