// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type UnifiedApprovalStage.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<UnifiedApprovalStage>))]
    public partial class UnifiedApprovalStage
    {

        /// <summary>
        /// Gets or sets approvalStageTimeOutInDays.
        /// The number of days that a request can be pending a response before it is automatically denied.
        /// </summary>
        [JsonPropertyName("approvalStageTimeOutInDays")]
        public Int32? ApprovalStageTimeOutInDays { get; set; }
    
        /// <summary>
        /// Gets or sets escalationApprovers.
        /// The escalation approvers for this stage when the primary approvers don't respond.
        /// </summary>
        [JsonPropertyName("escalationApprovers")]
        public IEnumerable<SubjectSet> EscalationApprovers { get; set; }
    
        /// <summary>
        /// Gets or sets escalationTimeInMinutes.
        /// The time a request can be pending a response from a primary approver before it can be escalated to the escalation approvers.
        /// </summary>
        [JsonPropertyName("escalationTimeInMinutes")]
        public Int32? EscalationTimeInMinutes { get; set; }
    
        /// <summary>
        /// Gets or sets isApproverJustificationRequired.
        /// Indicates whether the approver must provide justification for their reponse.
        /// </summary>
        [JsonPropertyName("isApproverJustificationRequired")]
        public bool? IsApproverJustificationRequired { get; set; }
    
        /// <summary>
        /// Gets or sets isEscalationEnabled.
        /// Indicates whether escalation if enabled.
        /// </summary>
        [JsonPropertyName("isEscalationEnabled")]
        public bool? IsEscalationEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets primaryApprovers.
        /// The primary approvers of this stage.
        /// </summary>
        [JsonPropertyName("primaryApprovers")]
        public IEnumerable<SubjectSet> PrimaryApprovers { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
