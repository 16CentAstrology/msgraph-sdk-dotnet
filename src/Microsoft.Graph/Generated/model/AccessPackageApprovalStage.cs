// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AccessPackageApprovalStage.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AccessPackageApprovalStage>))]
    public partial class AccessPackageApprovalStage
    {

        /// <summary>
        /// Gets or sets durationBeforeAutomaticDenial.
        /// The number of days that a request can be pending a response before it is automatically denied.
        /// </summary>
        [JsonPropertyName("durationBeforeAutomaticDenial")]
        public Duration DurationBeforeAutomaticDenial { get; set; }
    
        /// <summary>
        /// Gets or sets durationBeforeEscalation.
        /// If escalation is required, the time a request can be pending a response from a primary approver.
        /// </summary>
        [JsonPropertyName("durationBeforeEscalation")]
        public Duration DurationBeforeEscalation { get; set; }
    
        /// <summary>
        /// Gets or sets escalationApprovers.
        /// If escalation is enabled and the primary approvers do not respond before the escalation time, the escalationApprovers are the users who will be asked to approve requests.
        /// </summary>
        [JsonPropertyName("escalationApprovers")]
        public IEnumerable<SubjectSet> EscalationApprovers { get; set; }
    
        /// <summary>
        /// Gets or sets fallbackEscalationApprovers.
        /// The subjects, typically users, who are the fallback escalation approvers.
        /// </summary>
        [JsonPropertyName("fallbackEscalationApprovers")]
        public IEnumerable<SubjectSet> FallbackEscalationApprovers { get; set; }
    
        /// <summary>
        /// Gets or sets fallbackPrimaryApprovers.
        /// The subjects, typically users, who are the fallback primary approvers.
        /// </summary>
        [JsonPropertyName("fallbackPrimaryApprovers")]
        public IEnumerable<SubjectSet> FallbackPrimaryApprovers { get; set; }
    
        /// <summary>
        /// Gets or sets isApproverJustificationRequired.
        /// Indicates whether the approver is required to provide a justification for approving a request.
        /// </summary>
        [JsonPropertyName("isApproverJustificationRequired")]
        public bool? IsApproverJustificationRequired { get; set; }
    
        /// <summary>
        /// Gets or sets isEscalationEnabled.
        /// If true, then one or more escalationApprovers are configured in this approval stage.
        /// </summary>
        [JsonPropertyName("isEscalationEnabled")]
        public bool? IsEscalationEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets primaryApprovers.
        /// The subjects, typically users, who will be asked to approve requests. A collection of singleUser, groupMembers, requestorManager, internalSponsors or externalSponsors.
        /// </summary>
        [JsonPropertyName("primaryApprovers")]
        public IEnumerable<SubjectSet> PrimaryApprovers { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
